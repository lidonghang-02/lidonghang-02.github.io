<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>D1-H哪吒开发板GPIO使用</title>
    <link href="/2024/03/05/D1-H%E5%93%AA%E5%90%92%E5%BC%80%E5%8F%91%E6%9D%BFGPIO%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/03/05/D1-H%E5%93%AA%E5%90%92%E5%BC%80%E5%8F%91%E6%9D%BFGPIO%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="D1-H哪吒开发板GPIO使用"><a href="#D1-H哪吒开发板GPIO使用" class="headerlink" title="D1-H哪吒开发板GPIO使用"></a>D1-H哪吒开发板GPIO使用</h1><p>基 于 开 发 板 的 Tina_Linux 操 作 系 统 , 可 以 通 过 sysfs 方 式 控 制 GPIO<br>(<code>/sys/class/gpio</code>)。基本原理如下。</p><p>查看系统中有没有<code>/sys/class/gpio</code>这个文件夹,如果没有就在编译内核的时候勾选<code> Device Drivers-&gt; GPIO Support -&gt;/sys/class/gpio/... (sysfsinterface)</code>。</p><p>通过 sysfs 方式控制 GPIO,先访问<code>/sys/class/gpio</code> 目录,向 <code>export</code> 文件写入GPIO 编号,使得该 GPIO 的操作接口从内核空间暴露到用户空间,GPIO 的操作接口包括 <code>direction</code> 和 <code>value</code> 等,<code>direction</code> 控制 GPIO 方向,而 <code>value</code> 可控制 GPIO 输出或获得 GPIO 输入。文件 IO 方式操作 GPIO,使用到了 4 个函数 <code>open</code>、<code>close</code>、<code>read</code>、<code>write</code>。</p><ol><li><code>gpio_operation</code> 通过<code>/sys/</code>文件接口操作 IO 端口 GPIO 到文件系统<br>的映射:<ul><li>控制 GPIO 的目录位于<code>/sys/class/gpio</code>。</li><li><code>/sys/class/gpio/export</code> 文件用于通知系统需要导出控制的 GPIO 引脚<br> 编号。</li><li><code>/sys/class/gpio/unexport</code>用于通知系统取消导出。</li><li><code>/sys/class/gpio/gpiochipX</code> 目录保存系统中 GPIO 寄存器的信息,包括<br> 每个寄存器控制引脚的起始编号 base,寄存器名称,引脚总数 导出一个引脚的<br> 操作。</li><li><code>/sys/class/gpio/gpioX/direction</code> 文件,定义输入输入方向,可以通<br> 过下面命令定义为输出。<code>direction</code> 接受的参数:<code>in, out, high, low。high/low</code>同时设置方向为输出,并将 <code>value</code> 设置为相应的 <code>1/0</code></li><li><code>/sys/class/gpio/gpioX/value</code> 文件是端口的数值,为 1 或 0</li></ul></li><li>在Tina-Linux系统中操作<ul><li>导出：<code> echo 65 &gt; export</code></li><li>取消导出：<code>echo 65 &gt; unexport</code></li><li>设置方向：<code>echo out &gt; direction</code></li><li>查看方向：<code>cat direction</code></li><li>设置输出：<code>/echo 1 &gt; value</code></li><li>查看输出值：<code>cat value</code></li></ul></li></ol><p>使用时需要计算 GPIO 的编号,比如需要采用 <code>PC1</code>,那么 C 组是第三组那<br>么可以利用公式<br>$$num &#x3D; (n-1) * 32 + m$$<br>其中 <code>num</code> 是 GPIO 的编号,<code>n</code> 是第几组 gpio,<code>m</code> 是当前的 gpio 的序号。经过计算 PC1 的 GPIO 编号为 65。</p><p>所以当执行<code>echo 65 &gt; /sys/class/gpio/export</code>会在<code>/sys/class/gpio/</code>文件夹中生成 <code>gpio65</code> 这个目录,里面有些文件可以设置 GPIO 的值。</p><ol start="3"><li>在 C 程序中使用<ol><li>在<code>/sys/class/gpio/</code>生成 gpio 相关的文件夹，使用<code>gpio_export()</code></li><li>设置 gpio 输入输出方向，使用<code>gpio_set_dir()</code></li><li>读写 gpio 的值，使用<code>gpio_set_value()</code>或<code>gpio_get_value()</code><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> SYSFS_GPIO_DIR <span class="hljs-string">&quot;/sys/class/gpio&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MAX_BUF 64</span><br><span class="hljs-comment">// 导出</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">gpio_export</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> gpio)</span><br>&#123;<br>    <span class="hljs-type">int</span> fd, len;<br>    <span class="hljs-type">char</span> buf[MAX_BUF];<br><br>    fd = open(SYSFS_GPIO_DIR <span class="hljs-string">&quot;/export&quot;</span>, O_WRONLY);<br>    <span class="hljs-keyword">if</span> (fd &lt; <span class="hljs-number">0</span>)<br>    &#123;<br>        perror(<span class="hljs-string">&quot;gpio/export&quot;</span>);<br>        <span class="hljs-keyword">return</span> fd;<br>    &#125;<br><br>    len = <span class="hljs-built_in">snprintf</span>(buf, <span class="hljs-keyword">sizeof</span>(buf), <span class="hljs-string">&quot;%d&quot;</span>, gpio);<br>    write(fd, buf, len);<br>    close(fd);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">// 取消导出</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">gpio_unexport</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> gpio)</span><br>&#123;<br>    <span class="hljs-type">int</span> fd, len;<br>    <span class="hljs-type">char</span> buf[MAX_BUF];<br><br>    fd = open(SYSFS_GPIO_DIR <span class="hljs-string">&quot;/unexport&quot;</span>, O_WRONLY);<br>    <span class="hljs-keyword">if</span> (fd &lt; <span class="hljs-number">0</span>)<br>    &#123;<br>        perror(<span class="hljs-string">&quot;gpio/export&quot;</span>);<br>        <span class="hljs-keyword">return</span> fd;<br>    &#125;<br><br>    len = <span class="hljs-built_in">snprintf</span>(buf, <span class="hljs-keyword">sizeof</span>(buf), <span class="hljs-string">&quot;%d&quot;</span>, gpio);<br>    write(fd, buf, len);<br>    close(fd);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">// 设置方向</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">gpio_set_dir</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> gpio, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> out_flag)</span><br>&#123;<br>    <span class="hljs-type">int</span> fd, len;<br>    <span class="hljs-type">char</span> buf[MAX_BUF];<br><br>    len = <span class="hljs-built_in">snprintf</span>(buf, <span class="hljs-keyword">sizeof</span>(buf), SYSFS_GPIO_DIR <span class="hljs-string">&quot;/gpio%d/direction&quot;</span>, gpio);<br><br>    fd = open(buf, O_WRONLY);<br>    <span class="hljs-keyword">if</span> (fd &lt; <span class="hljs-number">0</span>)<br>    &#123;<br>        perror(<span class="hljs-string">&quot;gpio/direction&quot;</span>);<br>        <span class="hljs-keyword">return</span> fd;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (out_flag)<br>        write(fd, <span class="hljs-string">&quot;out&quot;</span>, <span class="hljs-number">3</span>);<br>    <span class="hljs-keyword">else</span><br>        write(fd, <span class="hljs-string">&quot;in&quot;</span>, <span class="hljs-number">2</span>);<br>    close(fd);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">// 设置输出值</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">gpio_set_value</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> gpio, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> value)</span><br>&#123;<br>    <span class="hljs-type">int</span> fd, len;<br>    <span class="hljs-type">char</span> buf[MAX_BUF];<br><br>    len = <span class="hljs-built_in">snprintf</span>(buf, <span class="hljs-keyword">sizeof</span>(buf), SYSFS_GPIO_DIR <span class="hljs-string">&quot;/gpio%d/value&quot;</span>, gpio);<br><br>    fd = open(buf, O_WRONLY);<br>    <span class="hljs-keyword">if</span> (fd &lt; <span class="hljs-number">0</span>)<br>    &#123;<br>        perror(<span class="hljs-string">&quot;gpio/set-value&quot;</span>);<br>        <span class="hljs-keyword">return</span> fd;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (value)<br>        write(fd, <span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">else</span><br>        write(fd, <span class="hljs-string">&quot;0&quot;</span>, <span class="hljs-number">1</span>);<br><br>    close(fd);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">// 读取输入值</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">gpio_get_value</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> gpio, <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> *value)</span><br>&#123;<br>    <span class="hljs-type">int</span> fd, len;<br>    <span class="hljs-type">char</span> buf[MAX_BUF];<br>    <span class="hljs-type">char</span> ch;<br><br>    len = <span class="hljs-built_in">snprintf</span>(buf, <span class="hljs-keyword">sizeof</span>(buf), SYSFS_GPIO_DIR <span class="hljs-string">&quot;/gpio%d/value&quot;</span>, gpio);<br><br>    fd = open(buf, O_RDONLY);<br>    <span class="hljs-keyword">if</span> (fd &lt; <span class="hljs-number">0</span>)<br>    &#123;<br>        perror(<span class="hljs-string">&quot;gpio/get-value&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>, buf);<br>        <span class="hljs-keyword">return</span> fd;<br>    &#125;<br>    read(fd, &amp;ch, <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">if</span> (ch != <span class="hljs-string">&#x27;0&#x27;</span>)<br>        *value = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span><br>        *value = <span class="hljs-number">0</span>;<br>    close(fd);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于STM32的温室控制系统</title>
    <link href="/2024/03/05/%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%B8%A9%E5%AE%A4%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/"/>
    <url>/2024/03/05/%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%B8%A9%E5%AE%A4%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="基于STM32的温室控制系统"><a href="#基于STM32的温室控制系统" class="headerlink" title="基于STM32的温室控制系统"></a>基于STM32的温室控制系统</h1><blockquote><p>使用正点原子精英板（STM32F103ZET6）</br><br>使用HAL库开发</br><br>引脚配置使用CubeMX，代码编写使用keil5 </br><br>由于写这个README的时候，距离这个项目完成已经半年多了，所以其中内容难免有错误，对此造成的困难我感到非常抱歉</p></blockquote><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><p><a href="https://github.com/lidonghang-02/greenhouse_control_system">github</a><br><a href="https://download.csdn.net/download/qq_66623299/88590103">CSDN</a></p><h2 id="基础功能"><a href="#基础功能" class="headerlink" title="基础功能"></a>基础功能</h2><ol><li>监测功能：监测温室的当前状态，包括空气温度、空气湿度、光照度、土壤湿度、等参数等的信息采集以及各个设备的开关状态。</li><li>设定功能：可以设定各个温室的运行参数，温室内的土壤湿度、时间等参数来自动控制水泵等的目标值，通过空气温度、空气湿度、光照、等参数来自动控制风机、延长光照设备等的目标值和设备的开启&#x2F;关闭等等。</li><li>手动控制：可以实现强制手动控制温室内的设备的开关状态。</li></ol><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用FlyMcu软件将<code>\intelligent_control\MDK-ARM\intelligent_control\intelligent_control.hex</code>文件烧录即可</p><h2 id="使用的元器件"><a href="#使用的元器件" class="headerlink" title="使用的元器件"></a>使用的元器件</h2><ol><li>TFT-LCD，薄膜晶体管液晶显示器–用于显示各种参数</li><li>土壤湿度检测器–用于检测土壤的湿度</li><li>三色灯–用于表示补光装置,水泵、风机设备是否在工作</li><li>温湿度检测器–用检测空气温度&#x2F;湿度</li><li>光照强度检测–用于检测光照强度</li><li>蜂鸣器–用于报警</li></ol><h2 id="部分缺陷"><a href="#部分缺陷" class="headerlink" title="部分缺陷"></a>部分缺陷</h2><ul><li>由于完成这个作业时元器件有限，所以只是使用一个三色灯来表示补光装置,水泵、风机三个设备的工作状态，并未使用这三个设备</li><li>电路图中由于部分元器件未找到，所以电路图并不全面</li></ul><h2 id="电路图"><a href="#电路图" class="headerlink" title="电路图"></a>电路图</h2><p><img src="/./%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%B8%A9%E5%AE%A4%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/1.png"></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="GPIO配置"><a href="#GPIO配置" class="headerlink" title="GPIO配置"></a>GPIO配置</h3><p><img src="/./%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%B8%A9%E5%AE%A4%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/2.png"></p><ul><li><code>PA0-WKUP</code>引脚按钮<code>KEY_UP</code>，用于界面的切换</li><li><code>PB0</code>引脚为LCD屏幕背光引脚</li><li><code>PE4</code>为按钮<code>KEY0</code>，用于进入修改视图和切换选项</li><li><code>PE3</code>为按钮<code>KEY1</code>，用于在查看视图下改变模式和在修改视图下改变状态和阈值大小</li><li><code>PB7</code>引脚用于控制蜂鸣器报警</li><li><code>PG1</code>引脚接入<code>DHT11</code>温湿度传感器的<code>data</code>引脚</li><li><code>PG3、5、7</code>引脚接入三色灯的三个引脚，用于反映当前对相应报警的处理</li></ul><h3 id="ADC配置"><a href="#ADC配置" class="headerlink" title="ADC配置"></a>ADC配置</h3><h4 id="ADC1"><a href="#ADC1" class="headerlink" title="ADC1"></a>ADC1</h4><p>ADC1使用下面配置，引脚为<code>PA1</code></p><p><img src="/./%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%B8%A9%E5%AE%A4%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/3.png"></p><p>开启ADC中断</p><p><img src="/./%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%B8%A9%E5%AE%A4%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/4.png"></p><p><img src="/./%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%B8%A9%E5%AE%A4%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/5.png"></p><h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3><p><img src="/./%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%B8%A9%E5%AE%A4%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/6.png"></p><h3 id="LCD屏幕"><a href="#LCD屏幕" class="headerlink" title="LCD屏幕"></a>LCD屏幕</h3><p><img src="/./%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%B8%A9%E5%AE%A4%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/7.png"></p><h3 id="时钟树"><a href="#时钟树" class="headerlink" title="时钟树"></a>时钟树</h3><p><img src="/./%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%B8%A9%E5%AE%A4%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/8.png"></p><h2 id="详细功能介绍"><a href="#详细功能介绍" class="headerlink" title="详细功能介绍"></a>详细功能介绍</h2><blockquote><p>由于在写这个文章时距离这个项目完成已经很久了，所以我在演示时并没有连接传感器，因此下面图中显示的数据并不正确</p></blockquote><h4 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h4><p><img src="/./%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%B8%A9%E5%AE%A4%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/9.png"></p><ol><li><p>传感器数据</p><ul><li><p>Temperature：温度</p></li><li><p>Humidity：湿度</p></li><li><p>Soil Moisture：土壤湿度</p></li><li><p>Light Intensity：光照强度</p></li></ul></li><li><p>装置控制</p><ul><li><p>Light：补光装置</p></li><li><p>Watering：水泵</p></li><li><p>Ventialtion：风机</p></li></ul></li><li><p>模式选择（Mode）：可在主界面按下<code>KEY1</code>切换</p><ul><li><p>Automatic：自动模式</p><ul><li>当发生传感器数据超过阈值时，蜂鸣器会进行报警处理，上面的装置也会根据错误类型进行相应处理</li></ul></li><li><p>Manual：手动模式</p><ul><li>可以手动开关三个装置，并关闭报警系统</li></ul></li></ul></li></ol><h4 id="阈值修改界面"><a href="#阈值修改界面" class="headerlink" title="阈值修改界面"></a>阈值修改界面</h4><p>可以在主界面中按下<code>KEY_UP</code>切换</p><p><img src="/./%E5%9F%BA%E4%BA%8ESTM32%E7%9A%84%E6%B8%A9%E5%AE%A4%E6%8E%A7%E5%88%B6%E7%B3%BB%E7%BB%9F/10.png"></p><ol><li><p>使用</p><ul><li><p>按下<code>KEY0</code>进入修改视图，可以看到在标号出有闪烁的黄色方块，继续按下可以切换选项</p></li><li><p>在修改视图下，按下<code>KEY1</code>可以修改相应阈值，长按可持续增长阈值大小</p></li></ul></li><li><p>内容含义</p><ul><li><p>Temperature MIN&#x2F;MAX：温度最低&#x2F;最高阈值，最高阈值上限在60，超过60会重新重MIN值处开始。</p></li><li><p>Humidity MIN&#x2F;MAX：湿度</p></li><li><p>Soil Moisture MIN&#x2F;MAX：土壤湿度</p></li><li><p>Light MIN&#x2F;MAX：光照强度</p></li><li><p>选项9：保存并退出修改视图</p></li><li><p>选项10：不保存并退出</p></li></ul></li></ol><h2 id="源码-1"><a href="#源码-1" class="headerlink" title="源码"></a>源码</h2><p><a href="https://github.com/lidonghang-02/greenhouse_control_system">github</a><br><a href="https://download.csdn.net/download/qq_66623299/88590103">CSDN</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在ubuntu上安装/卸载libreoffice</title>
    <link href="/2024/03/05/%E5%9C%A8ubuntu%E4%B8%8A%E5%AE%89%E8%A3%85-%E5%8D%B8%E8%BD%BDlibreoffice/"/>
    <url>/2024/03/05/%E5%9C%A8ubuntu%E4%B8%8A%E5%AE%89%E8%A3%85-%E5%8D%B8%E8%BD%BDlibreoffice/</url>
    
    <content type="html"><![CDATA[<h1 id="在ubuntu上安装-卸载libreoffice"><a href="#在ubuntu上安装-卸载libreoffice" class="headerlink" title="在ubuntu上安装&#x2F;卸载libreoffice"></a>在ubuntu上安装&#x2F;卸载libreoffice</h1><h2 id="安装libreoffice"><a href="#安装libreoffice" class="headerlink" title="安装libreoffice"></a>安装libreoffice</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>添加官方PPA</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo add-apt-repository ppa:libreoffice/ppa<br></code></pre></td></tr></table></figure><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br>sudo apt install libreoffice<br></code></pre></td></tr></table></figure><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt remove --purge libreoffice*<br>sudo <span class="hljs-built_in">rm</span> -rf /home/&lt;username&gt;/.config/libreoffice<br></code></pre></td></tr></table></figure><ul><li>注意：不删除<code>config/libreoffice</code>可能在重新安装 LibreOffice 时出现问题</li></ul><p>清除不再需要的依赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get autoremove<br>sudo apt-get autoclean<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>简单字符型设备驱动</title>
    <link href="/2023/12/01/%E7%AE%80%E5%8D%95%E5%AD%97%E7%AC%A6%E5%9E%8B%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8/"/>
    <url>/2023/12/01/%E7%AE%80%E5%8D%95%E5%AD%97%E7%AC%A6%E5%9E%8B%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="简单字符型设备驱动"><a href="#简单字符型设备驱动" class="headerlink" title="简单字符型设备驱动"></a>简单字符型设备驱动</h1><blockquote><p>代码整体非常简单，目前仍有许多bug，是作者初学linux驱动编写的练习，bug未来大概率不会修改</p></blockquote><p><a href="https://github.com/lidonghang-02/Simple_character_device_driver">项目地址</a></p><h2 id="整体思路："><a href="#整体思路：" class="headerlink" title="整体思路："></a>整体思路：</h2><ol><li>编写字符型设备驱动程序，实现加解密功能。首先需要定义一个字符型设备驱动程序，注册设备，实现设备文件的打开、关闭、读写和 ioctl 操作函数。在 ioctl 函数中，实现 Setkey、SetMode、StartWrite、StartRead 和 Reset 命令的处理函数，以及加解密算法的实现函数。</li><li>设计测试程序，测试加解密功能是否正确。测试程序可以使用 C语言编写，主要包括小数据加密和大数据加密测试。</li></ol><h2 id="具体代码架构："><a href="#具体代码架构：" class="headerlink" title="具体代码架构："></a>具体代码架构：</h2><ol><li>设备驱动程序部分</li></ol><ul><li>定义设备结构体，包括设备的缓冲区、缓冲区大小、读写指针等信息。</li><li>实现设备文件的打开、关闭、读写和 ioctl 操作函数，其中 ioctl 操作函数主要处理 Setkey、SetMode、StartWrite、StartRead 和 Reset 命令。</li><li>在write和read函数中实现加密解密算法</li></ul><ol start="2"><li>测试程序部分</li></ol><ul><li>实现小数据加密和解密的测试函数，测试加密前后数据是否一致。</li><li>实现大数据加密和解密的测试函数，测试多次使用 Write 命令写入数据后，加密前后数据是否一致。</li></ul><ol start="3"><li>ioctl 中的各项功能：</li></ol><ul><li>Setkey：设置加密算法的密钥，后面的write会写入密钥。</li><li>SetMode：设置加解密模式，通过 ioctl 命令传递一个表示加密还是解密的标志，将标志保存在设备结构体中。<ul><li>mode有3种模式，加密模式（ENCRYPTION）,解密模式（DECRYPTION），常规模式（NORMAL）</li></ul></li><li>StartWrite：设置开始写入状态，表示后续的数据写入操作是加密数据，并将写指针指向缓冲区的起始位置。</li><li>StartRead：设置开始读出状态，表示后续的数据读出操作是解密数据，并将读指针指向缓冲区的起始位置。</li><li>Reset：清空设备缓冲区，将读写指针重置为缓冲区的起始位置。</li></ul><h2 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h2><ul><li>写入的数据只能读取一次</li><li>当数据达到1MB时<ul><li>读取速度非常慢，且容易出错</li><li>读取需要采用for循环嵌套的方式读取，只是用read函数读取1024*1024会出错</li></ul></li></ul><h2 id="安装驱动程序"><a href="#安装驱动程序" class="headerlink" title="安装驱动程序"></a>安装驱动程序</h2><p>编译</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">make</span><br></code></pre></td></tr></table></figure><p>安装驱动</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">chmod</span> <span class="hljs-number">777</span> encryption.ko<br><span class="hljs-attribute">sudo</span> insmod encryption.ko<br></code></pre></td></tr></table></figure><ul><li>注意：如果安装不成功，提示Device or resource busy，可以使用如下命令查看已占用的设备号，并将源文件中的<code>major</code>修改为空闲设备号，重新编译插入即可：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /proc/devices<br></code></pre></td></tr></table></figure></li></ul><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="编译运行测试文件test-c"><a href="#编译运行测试文件test-c" class="headerlink" title="编译运行测试文件test.c"></a>编译运行测试文件<code>test.c</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">gcc <span class="hljs-built_in">test</span>,c -o <span class="hljs-built_in">test</span><br>sudo ./test<br></code></pre></td></tr></table></figure><h3 id="测试内容"><a href="#测试内容" class="headerlink" title="测试内容"></a>测试内容</h3><p>测试内容分为小数据和大数据测试两部分</p><ol><li><p>首先设置密钥为<code>asdasd</code></p></li><li><p>小数据测试</p><ul><li>设置加密模式并写入数据<code>qwer</code></li><li>在正常模式下读取数据</li><li>再次设置加密模式并写入数据<code>qwer</code></li><li>在解密模式下读取数据</li></ul></li><li><p>大数据测试</p><ul><li>在加密模式下，使用循环不断写入<code>abc</code>直到1MB</li><li>在解密模式下，使用循环嵌套读取内容写入<code>out.txt</code>文件<ul><li>程序结束后查看<code>out.txt</code>文件的大小可以看到为1MB</li></ul></li></ul></li></ol><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/lidonghang-02/Simple_character_device_driver">项目地址</a></p>]]></content>
    
    
    <categories>
      
      <category>C</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在ubuntu上挂载WebDAV</title>
    <link href="/2023/12/01/%E5%9C%A8ubuntu%E4%B8%8A%E6%8C%82%E8%BD%BDWebDAV/"/>
    <url>/2023/12/01/%E5%9C%A8ubuntu%E4%B8%8A%E6%8C%82%E8%BD%BDWebDAV/</url>
    
    <content type="html"><![CDATA[<h1 id="WebDAV挂载"><a href="#WebDAV挂载" class="headerlink" title="WebDAV挂载"></a>WebDAV挂载</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install davfs2<br></code></pre></td></tr></table></figure><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i <span class="hljs-string">&#x27;s/# use_locks       1/use_locks       0/g&#x27;</span> /etc/davfs2/davfs2.conf<br></code></pre></td></tr></table></figure><ul><li>保存用户名密码，以后挂载的时候不会要求输入用户名密码！<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;你的WebDAV地址 用户名 密码&quot;</span> &gt;&gt; /etc/davfs2/secrets<br></code></pre></td></tr></table></figure></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mount -t davfs https://ena.teracloud.jp/dav/ /TeraCloud<br></code></pre></td></tr></table></figure><ul><li>注意：挂载目录TeraCloud必须提前创建好</li></ul><h2 id="可能遇到的报错"><a href="#可能遇到的报错" class="headerlink" title="可能遇到的报错"></a>可能遇到的报错</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">报错 /sbin/mount.davfs:<span class="hljs-keyword">user</span> <span class="hljs-title">&lt;username</span>&gt; must be member of <span class="hljs-keyword">group</span> <span class="hljs-title">davfs2</span><br></code></pre></td></tr></table></figure><ul><li>这个错误提示意味着在尝试使用 <code>mount.davfs</code> 工具挂载 WebDAV 文件共享时，当前用户 不属于 <code>davfs2</code> 用户组。在使用 <code>mount.davfs</code> 工具挂载 WebDAV 文件共享时，需要具有足够的权限才能访问 WebDAV 服务器上的共享资源，因此必须将当前用户添加到 <code>davfs2</code> 用户组中。</li></ul><ol><li><p>确认用户帐户  还没有属于 <code>davfs2</code> 用户组。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">groups</span> ldh<br></code></pre></td></tr></table></figure></li><li><p>如果 <code>davfs2</code> 不在当前用户的用户组列表中，则需要将其添加到该列表中。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo usermod -a -G davfs2 ldh<br></code></pre></td></tr></table></figure></li><li><p>重新登录以使更改生效。可以注销并重新登录，也可以使用以下命令重新启动 <code>mount.davfs</code> 以使更改生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl restart davfs2<br></code></pre></td></tr></table></figure></li></ol><p>现在，可以使用 <code>mount.davfs</code> 工具挂载 WebDAV 文件共享了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在docker上搭建D1-H哪吒开发板环境</title>
    <link href="/2023/12/01/%E5%9C%A8docker%E4%B8%8A%E6%90%AD%E5%BB%BAD1-H%E5%93%AA%E5%90%92%E5%BC%80%E5%8F%91%E6%9D%BF%E7%8E%AF%E5%A2%83/"/>
    <url>/2023/12/01/%E5%9C%A8docker%E4%B8%8A%E6%90%AD%E5%BB%BAD1-H%E5%93%AA%E5%90%92%E5%BC%80%E5%8F%91%E6%9D%BF%E7%8E%AF%E5%A2%83/</url>
    
    <content type="html"><![CDATA[<h1 id="在docker上搭建D1-H哪吒开发板环境"><a href="#在docker上搭建D1-H哪吒开发板环境" class="headerlink" title="在docker上搭建D1-H哪吒开发板环境"></a>在docker上搭建D1-H哪吒开发板环境</h1><p><a href="https://d1.docs.aw-ol.com/study/study_1tina/">官方文档</a></p><h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><h3 id="创建系统"><a href="#创建系统" class="headerlink" title="创建系统"></a>创建系统</h3><p>启动docker创建一个ubuntu14.04</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -it --name d1-h ubuntu:14.04 <br></code></pre></td></tr></table></figure><h4 id="安装必要工具"><a href="#安装必要工具" class="headerlink" title="安装必要工具"></a>安装必要工具</h4><ol><li>将<code>/etc/aot/sources.list</code>中的内容替换为下面内容<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs 1c">deb https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty main restricted universe multiverse    </span><br><span class="hljs-meta"># deb-src https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty main restricted universe multiverse    </span></span><br>deb https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse    </span><br><span class="hljs-meta"># deb-src https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse    </span></span><br>deb https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-backports main restricted </span><br><span class="hljs-meta"># deb-src https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-backports main restricted universe multiverse    </span></span><br>deb https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-security main restricted universe multiverse    </span><br><span class="hljs-meta"># deb-src https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-security main restricted universe multiverse    </span></span><br><br><span class="hljs-meta"># 预发布软件源，不建议启用   </span><br><span class="hljs-meta"># deb https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse  </span></span><br><span class="hljs-meta"># deb-src https:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse  </span></span><br></code></pre></td></tr></table></figure></li><li>安装工具<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get update<br>sudo apt-get install build-essential subversion git-core libncurses5-dev zlib1g-dev gawk flex quilt libssl-dev xsltproc libxml-parser-perl mercurial bzr ecj cvs unzip lib32z1 lib32z1-dev lib32stdc++6 libstdc++6 bison busybox vim -y<br></code></pre></td></tr></table></figure></li></ol><h3 id="添加密钥"><a href="#添加密钥" class="headerlink" title="添加密钥"></a>添加密钥</h3><ol><li>注册<a href="https://open.allwinnertech.com/#/login?cas=true">全志客户服务平台</a></li><li>在docker中生成钥匙对，全程回车默认即可<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa<br></code></pre></td></tr></table></figure></li><li>使用<code>cat</code>查看<code>~/.ssh/id_rsa.pub</code>文件中的内容并复制<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure></li><li>添加到全志的平台上<br><img src="/./1.png" alt="密钥添加"></li></ol><h3 id="安装repo引导脚本"><a href="#安装repo引导脚本" class="headerlink" title="安装repo引导脚本"></a>安装repo引导脚本</h3><blockquote><p>注意：下载Tina前需要使用AW提供的引导脚本和repo仓库，如已安装了google官方引导脚本，请将google官方引导脚本替换成AW提供的引导脚本，两者不兼容。 </p></blockquote><ol><li>使用下面命令下载repo引导脚本 <blockquote><p>注意：其中的<code>username</code>要换成上面在全志客户服务平台上注册的用户名</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> ssh://username@sdk.allwinnertech.com/git_repo/repo.git<br></code></pre></td></tr></table></figure>如果询问 <code>Are you sure you want to continue connecting (yes/no)?</code> 的时候需要输入 <code>yes</code>。</li></ol><p>如果遇到要求输入密码的问题时可能是上面<code>username</code>或密钥配置错误，可以在<a href="http://open.allwinnertech.com/guide/yht2/chan_pin_bao_xia_zai/sdk_xiazai_wenti.html">SDK下载常见问题及解决方案</a>寻找解决方案</p><ol start="2"><li><p>修改<code>repo/repo</code>的<code>username</code>为自己的用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim repo/repo<br></code></pre></td></tr></table></figure><p><img src="/./2.png" alt="修改用户名"><br>修改后输入<code>:wq</code>保存退出</p></li><li><p>添加环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> repo/repo /usr/bin/repo<br><span class="hljs-built_in">chmod</span> 777 /usr/bin/repo<br></code></pre></td></tr></table></figure><p>修改完成后可以使用<code>repo help</code>测试是否成功</p></li></ol><p>如果遇到一些语法报错的问题，可以尝试修改python的版本，修改前确保你要修改的版本已安装</p><p>输入下面命令修改<code>~/.bin/repo</code>文件的第一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.bin/repo<br></code></pre></td></tr></table></figure><p><img src="/./3.png" alt="修改py版本"><br>这里我修改为了python3.5</p><h3 id="下载SDK"><a href="#下载SDK" class="headerlink" title="下载SDK"></a>下载SDK</h3><ol><li>创建存储文件夹<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> tina &amp;&amp; <span class="hljs-built_in">cd</span> tina<br></code></pre></td></tr></table></figure></li><li>配置git<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.email <span class="hljs-string">&quot;you@example.com&quot;</span><br>git config --global user.name <span class="hljs-string">&quot;Your Name&quot;</span><br></code></pre></td></tr></table></figure></li><li>初始化repo仓库，注意替换下面命令的<code>username</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">repo init -u ssh://username@sdk.allwinnertech.com/git_repo/D1_Tina_Open/manifest.git -b master -m tina-d1-h.xml<br></code></pre></td></tr></table></figure></li></ol><p>如果报错可以在<a href="http://open.allwinnertech.com/guide/yht2/chan_pin_bao_xia_zai/sdk_xiazai_wenti.html">SDK下载常见问题及解决方案</a>寻找解决方案</p><ol start="4"><li>同步仓库，并创建开发分支<blockquote><p>如果上面没有修改repo的python版本，则可以直接使用<code>repo</code>命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">python2.7 /usr/bin/repo <span class="hljs-built_in">sync</span><br>python2.7 /usr/bin/repo start product-smartx-d1-tina-v1.0-release --all<br></code></pre></td></tr></table></figure></li></ol><ul><li>在<code>repo sunc</code>时可能会遇到证书验证不通过的问题，可以先尝试执行下面命令更新证书<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt update<br>apt install ca-certificates<br>apt upgrade ca-certificates<br></code></pre></td></tr></table></figure>如果更新后仍然不通过可以执行下面命令之一禁用SSL验证</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global http.sslVerify <span class="hljs-literal">false</span><br><span class="hljs-comment"># 或</span><br><span class="hljs-built_in">export</span> GIT_SSL_NO_VERIFY=<span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h3 id="编译打包"><a href="#编译打包" class="headerlink" title="编译打包"></a>编译打包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> build/envsetup.sh<br>lunch<br>make -j32<br>pack<br></code></pre></td></tr></table></figure><ul><li><p>确保在<code>bash</code>终端中执行想面命令</p></li><li><p>lunch中选择方案时输入对应序号即可</p></li><li><p>在<code>make</code>时可能会遇到下面报错</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">configure: error: you should <span class="hljs-keyword">not</span> <span class="hljs-built_in">run</span> configure as root (<span class="hljs-built_in">set</span> <span class="hljs-attribute">FORCE_UNSAFE_CONFIGURE</span>=1 <span class="hljs-keyword">in</span> environment <span class="hljs-keyword">to</span> bypass this check)<br></code></pre></td></tr></table></figure><p>可以尝试下面方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> FORCE_UNSAFE_CONFIGURE=1<br>make -j32 FORCE=1<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu安装fusuma</title>
    <link href="/2023/12/01/ubuntu%E5%AE%89%E8%A3%85fusuma/"/>
    <url>/2023/12/01/ubuntu%E5%AE%89%E8%A3%85fusuma/</url>
    
    <content type="html"><![CDATA[<h1 id="安装fusuma"><a href="#安装fusuma" class="headerlink" title="安装fusuma"></a>安装fusuma</h1><p><a href="https://github.com/iberianpig/fusuma">fusuma官网</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="授予读取触摸板设备的权限"><a href="#授予读取触摸板设备的权限" class="headerlink" title="授予读取触摸板设备的权限"></a>授予读取触摸板设备的权限</h3><p>必须是 Input 组的成员才能阅读 Fusuma 的触摸板。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gpasswd -a <span class="hljs-variable">$USER</span> input<br></code></pre></td></tr></table></figure><p>重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">reboot<br></code></pre></td></tr></table></figure><h3 id="安装依赖项"><a href="#安装依赖项" class="headerlink" title="安装依赖项"></a>安装依赖项</h3><ol><li>安装libinput-tools<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install libinput-tools<br></code></pre></td></tr></table></figure></li><li>安装Ruby（fusuma基于Ruby运行）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install ruby<br></code></pre></td></tr></table></figure></li><li>安装fusuma<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gem install fusuma<br></code></pre></td></tr></table></figure> ** <em>如果上面命令正常运可直接跳到第四步</em>**</li></ol><p> 注意：当在安装gem的时候有时会报下面的错误，或是gem install 太慢 或是无法联接 timeout</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-symbol">WARNING: </span>RubyGems 1.2+ index not found for:<br><br>RubyGems will revert to legacy indexes degrading performance.<br></code></pre></td></tr></table></figure><p>这时可以采用本地安装的方式</p><ul><li>可以在<a href="https://rubygems.org/">Ruby官网</a>在中下载<code>fusuma</code>安装包本地安装，直接搜索<code>fusuma</code>即可</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gem install -l xxx.gem文件<br></code></pre></td></tr></table></figure><ol start="4"><li>安装键盘模拟工具xdotool (optional)(fusuma通过此软件模拟快捷键)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install xdotool<br></code></pre></td></tr></table></figure></li></ol><hr><h2 id="如何启用"><a href="#如何启用" class="headerlink" title="如何启用"></a>如何启用</h2><ol><li><p>在终端中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fusuma<br></code></pre></td></tr></table></figure><p>如果在GNOME中无反应：<br>通过运行以下命令，确保触摸板事件已发送到 GNOME 桌面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gsettings <span class="hljs-built_in">set</span> org.gnome.desktop.peripherals.touchpad send-events enabled<br></code></pre></td></tr></table></figure></li><li><p>开机自启设置</p></li></ol><ul><li>找到“启用应用程序”</li><li>打开启用应用程序，找到“添加”按钮</li><li>在“名称”中填写应用名称<code>fusuma</code>，在“命令”填写<code>fusuma</code></li><li>点击“添加”,fusuma就可以开机自启了。</li></ul><hr><h2 id="fusuma配置文件"><a href="#fusuma配置文件" class="headerlink" title="fusuma配置文件"></a>fusuma配置文件</h2><h2 id="Fusuma是一个命令行工具，所有操作都在终端中进行-打开fusuma的配置文件：-配置文件的绝对路径为：-用文件夹查看记得勾选“显示隐藏文件”"><a href="#Fusuma是一个命令行工具，所有操作都在终端中进行-打开fusuma的配置文件：-配置文件的绝对路径为：-用文件夹查看记得勾选“显示隐藏文件”" class="headerlink" title="Fusuma是一个命令行工具，所有操作都在终端中进行- 打开fusuma的配置文件：- 配置文件的绝对路径为：- 用文件夹查看记得勾选“显示隐藏文件”"></a>Fusuma是一个命令行工具，所有操作都在终端中进行<br>- 打开fusuma的配置文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano ~/.config/fusuma/config.yml<br></code></pre></td></tr></table></figure><br>- 配置文件的绝对路径为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">~/.config/fusuma/config.yml<br></code></pre></td></tr></table></figure><br>- 用文件夹查看记得勾选“显示隐藏文件”</h2><h3 id="如何配置请查阅fusuma官网"><a href="#如何配置请查阅fusuma官网" class="headerlink" title="如何配置请查阅fusuma官网"></a>如何配置请查阅<a href="https://github.com/iberianpig/fusuma">fusuma官网</a></h3><p>默认配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">swipe:<br>  3: <br>    left: <br>      shortcut: <span class="hljs-string">&#x27;alt+Left&#x27;</span><br>    right: <br>      shortcut: <span class="hljs-string">&#x27;alt+Right&#x27;</span><br>    up: <br>      shortcut: <span class="hljs-string">&#x27;ctrl+t&#x27;</span><br>    down: <br>      shortcut: <span class="hljs-string">&#x27;ctrl+w&#x27;</span><br>  4:<br>    left: <br>      shortcut: <span class="hljs-string">&#x27;super+Left&#x27;</span><br>    right: <br>      shortcut: <span class="hljs-string">&#x27;super+Right&#x27;</span><br>    up: <br>      shortcut: <span class="hljs-string">&#x27;super+a&#x27;</span><br>    down: <br>      shortcut: <span class="hljs-string">&#x27;super+s&#x27;</span><br>pinch:<br>  <span class="hljs-keyword">in</span>:<br>    shortcut: <span class="hljs-string">&#x27;ctrl+plus&#x27;</span><br>  out:<br>     shortcut: <span class="hljs-string">&#x27;ctrl+minus&#x27;</span><br> <br>threshold:<br>  swipe: 1<br>  pinch: 1<br> <br>interval:<br>  swipe: 1<br>  pinch: 1<br></code></pre></td></tr></table></figure><p>我的配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs bash">swipe:<br>  3:<br>    left:<br>      <span class="hljs-built_in">command</span>: <span class="hljs-string">&#x27;xdotool key alt+Left&#x27;</span><br>    right:<br>      <span class="hljs-built_in">command</span>: <span class="hljs-string">&#x27;xdotool key alt+Right&#x27;</span><br>    up:<br>      <span class="hljs-built_in">command</span>: <span class="hljs-string">&#x27;xdotool key ctrl+alt+Down&#x27;</span><br>      threshold: 1.5<br>    down:<br>      <span class="hljs-built_in">command</span>: <span class="hljs-string">&#x27;xdotool key ctrl+alt+Up&#x27;</span><br>      threshold: 1.5<br>  4:<br>    left:<br>      <span class="hljs-built_in">command</span>: <span class="hljs-string">&#x27;xdotool key super+Left&#x27;</span><br>    right:<br>      <span class="hljs-built_in">command</span>: <span class="hljs-string">&#x27;xdotool key super+Right&#x27;</span><br>    up:<br>      <span class="hljs-built_in">command</span>: <span class="hljs-string">&#x27;xdotool key super+Up&#x27;</span><br>    down:<br>      <span class="hljs-built_in">command</span>: <span class="hljs-string">&#x27;xdotool key super+s&#x27;</span><br>pinch:<br>  2:<br>    <span class="hljs-keyword">in</span>:<br>      <span class="hljs-built_in">command</span>: <span class="hljs-string">&#x27;xdotool key ctrl+equal&#x27;</span><br>      threshold: 0.1<br>    out:<br>      <span class="hljs-built_in">command</span>: <span class="hljs-string">&#x27;xdotool key ctrl+minus&#x27;</span><br>      threshold: 0.1<br><br>threshold:<br>  swipe: 1<br>  pinch: 1<br><br>interval:<br>  swipe: 1<br>  pinch: 1<br></code></pre></td></tr></table></figure><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><h3 id="fusuma正常卸载即可"><a href="#fusuma正常卸载即可" class="headerlink" title="fusuma正常卸载即可"></a><code>fusuma</code>正常卸载即可</h3><h3 id="卸载Ruby和gem"><a href="#卸载Ruby和gem" class="headerlink" title="卸载Ruby和gem"></a>卸载Ruby和gem</h3><ol><li>如果是使用Ubuntu软件包安装的<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get purge ruby rubygems <br></code></pre></td></tr></table></figure>  如果您使用RVM安装Ruby，以下命令将完全删除RVM安装目录<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rvm implode <br></code></pre></td></tr></table></figure></li><li>删除Ruby Gems<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gem uninstall rvm <br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
